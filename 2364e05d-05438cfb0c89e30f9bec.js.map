{"version":3,"file":"2364e05d-05438cfb0c89e30f9bec.js","mappings":"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","sources":["webpack://parafiaskuly/./src/templates/author.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SiteArchiveHeader,\n  SiteNavMain,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport type { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ntype AuthorTemplateProps = {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    authorYaml: {\n      name: string;\n      website?: string;\n      twitter?: string;\n      facebook?: string;\n      location?: string;\n      profile_image?: any;\n      bio?: string;\n      avatar: any;\n    };\n  };\n};\n\nfunction Author({ data, location }: AuthorTemplateProps) {\n  const author = data.authorYaml;\n\n  const edges = data.allMarkdownRemark.edges.filter(edge => {\n    const isDraft = edge.node.frontmatter.draft !== true || process.env.NODE_ENV === 'development';\n\n    let authorParticipated = false;\n    if (edge.node.frontmatter.author) {\n      edge.node.frontmatter.author.forEach(element => {\n        if (element.name === author.name) {\n          authorParticipated = true;\n        }\n      });\n    }\n\n    return isDraft && authorParticipated;\n  });\n  const totalCount = edges.length;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {author.name} - {config.title}\n        </title>\n        <meta name=\"description\" content={author.bio} />\n        <meta name=\"robots\" content=\"index, follow\" />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.name} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        <meta property=\"og:locale\" content={config.locale} />\n        <meta property=\"article:publisher\" content=\"Parafia SkuÅ‚y\" />\n        <meta property=\"article:author\" content={author.name} />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.name} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header className=\"site-archive-header\" css={[SiteHeader, SiteArchiveHeader]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n\n          <ResponsiveHeaderBackground\n            backgroundImage={getSrc(author.profile_image)}\n            css={[outer, SiteHeaderBackground]}\n            className=\"site-header-background\"\n          >\n            <div css={inner}>\n              <SiteHeaderContent css={AuthorHeader} className=\"site-header-content author-header\">\n                <img\n                  style={{ marginTop: '8px' }}\n                  css={[AuthorProfileImage, AuthorProfileBioImage]}\n                  src={getSrc(data.authorYaml.avatar)}\n                  alt={author.name}\n                />\n                <AuthHeaderContent className=\"author-header-content\">\n                  <SiteTitle className=\"site-title\">{author.name}</SiteTitle>\n                  {author.bio && <AuthorBio className=\"author-bio\">{author.bio}</AuthorBio>}\n                  <div css={AuthorMeta} className=\"author-meta\">\n                    {author.location && (\n                      <div className=\"author-location\" css={[HiddenMobile]}>\n                        {author.location}\n                      </div>\n                    )}\n                    <div className=\"author-stats\" css={[HiddenMobile]}>\n                      {totalCount > 1 && `${totalCount} posts`}\n                      {totalCount === 1 && '1 post'}\n                      {totalCount === 0 && 'No posts'}\n                    </div>\n                  </div>\n                </AuthHeaderContent>\n              </SiteHeaderContent>\n            </div>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($author: String) {\n    authorYaml(name: { eq: $author }) {\n      name\n      website\n      twitter\n      bio\n      facebook\n      location\n      profile_image {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n      avatar {\n        childImageSharp {\n          gatsbyImageData(quality: 100, breakpoints: [40, 80, 120], layout: FULL_WIDTH)\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { frontmatter: { date: ASC } }\n      limit: 2000\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            excerpt\n            tags\n            date\n            draft\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            author {\n              name\n              bio\n              avatar {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH)\n                }\n              }\n            }\n          }\n          fields {\n            readingTime {\n              minutes\n            }\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorHeader = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 10vw 0 10px;\n  align-items: center;\n\n  @media (max-width: 500px) {\n    padding: 10px 0 0;\n\n    /* no image */\n    padding-bottom: 10px;\n  }\n`;\n\nconst AuthorMeta = css`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0 1px;\n  font-size: 1.2rem;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n  white-space: nowrap;\n\n  .author-location + .author-stats:before,\n  .author-stats + .author-social-link:before,\n  .author-social-link + .author-social-link:before {\n    content: 'â€¢';\n    display: inline-block;\n    margin: 0 12px;\n    color: #fff;\n    opacity: 0.6;\n  }\n\n  @media (max-width: 500px) {\n    margin-top: 8px;\n  }\n\n  @media (max-width: 700px) {\n    .author-location,\n    .author-stats,\n    .author-stats + .author-social-link:first-of-type:before {\n      display: none;\n    }\n  }\n`;\n\nconst AuthorSocialLink = styled.span`\n  display: inline-block;\n  margin: 0;\n  padding: 6px 0;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 6px 0 0;\n  max-width: 46em;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 400;\n  opacity: 0.8;\n`;\n\nconst AuthHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 5px 0 0 30px;\n  @media (max-width: 500px) {\n    align-items: center;\n    margin: 16px 0 0 0;\n  }\n`;\n\n// .site-header-content .author-profile-image\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: -4px 0 0;\n  width: 110px;\n  height: 110px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n  border-radius: 100%;\n`;\n\nconst AuthorSocialLinkAnchor = styled.a`\n  color: #fff;\n  font-weight: 600;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport default Author;\n"],"names":["HiddenMobile","name","styles","AuthorHeader","AuthorMeta","AuthorBio","_styled","target","AuthHeaderContent","AuthorProfileBioImage","data","location","author","authorYaml","edges","allMarkdownRemark","filter","edge","isDraft","node","frontmatter","draft","process","authorParticipated","forEach","element","totalCount","length","___EmotionJSX","IndexLayout","Helmet","lang","config","content","bio","property","pathname","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","backgroundImage","getSrc","profile_image","SiteHeaderBackground","SiteHeaderContent","style","marginTop","AuthorProfileImage","src","avatar","alt","SiteTitle","id","SiteMain","PostFeed","map","PostCard","key","fields","slug","post","Footer"],"sourceRoot":""}