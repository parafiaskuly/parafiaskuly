{"version":3,"file":"e0525e89-3689064b64b46269b031.js","mappings":"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","sources":["webpack://parafiaskuly/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { pl } from 'date-fns/locale';\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\nimport { kebabCase } from 'lodash-es';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport { AuthorList } from '../components/AuthorList';\n\nexport type Author = {\n  name: string;\n  bio: string;\n  avatar: any;\n};\n\ntype PageTemplateProps = {\n  readonly location: Location;\n  readonly data: {\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: any;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          minutes: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  readonly pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n};\n\nexport type PageContext = {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      minutes: string;\n    };\n  };\n  frontmatter: {\n    image: any;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n};\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (post.frontmatter.image) {\n    width = getImage(post.frontmatter.image)?.width;\n    height = getImage(post.frontmatter.image)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLLL yyyy', { locale: pl });\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"robots\" content=\"index, follow\" />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        <meta property=\"og:locale\" content={config.locale} />\n        {post.frontmatter.image && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].name} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width?.toString()} />}\n        {height && <meta property=\"og:image:height\" content={height?.toString()} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    config.showAllTags &&\n                    post.frontmatter.tags.map((tag, idx) => (\n                      <React.Fragment key={tag}>\n                        {idx > 0 && <>, &nbsp;</>}\n                        <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                      </React.Fragment>\n                    ))}\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 &&\n                    !config.showAllTags && (\n                      <Link to={`/tags/${kebabCase(post.frontmatter.tags[0])}/`}>\n                        {post.frontmatter.tags[0]}\n                      </Link>\n                    )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map(author => (\n                          <Link key={author.name} to={`/author/${kebabCase(author.name)}/`}>\n                            {author.name}\n                          </Link>\n                        ))}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>\n                          {Math.max(1, Math.round(post.fields.readingTime.minutes))} min czytania\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.image)!}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`\n  query ($slug: String, $primaryTag: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      fields {\n        readingTime {\n          minutes\n        }\n      }\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        author {\n          name\n          bio\n          avatar {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            readingTime {\n            minutes\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"names":["PostTemplate","css","colors","darkmode","PostFull","name","styles","NoImage","PostFullHeader","_styled","target","PostFullTags","midgrey","PostFullCustomExcerpt","lighten","PostFullByline","lightgrey","darkgrey","PostFullTitle","setLightness","PostFullImage","data","pageContext","location","_width","_height","post","markdownRemark","width","height","_getImage","_getImage2","frontmatter","image","getImage","date","Date","datetime","format","displayDatetime","locale","pl","___EmotionJSX","IndexLayout","className","Helmet","lang","config","title","content","excerpt","property","siteUrl","pathname","getSrc","tags","facebook","author","twitter","split","toString","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","length","showAllTags","map","tag","idx","React","key","Link","to","_kebabCase","AuthorList","authors","tooltip","dateTime","Math","max","round","fields","readingTime","minutes","GatsbyImage","style","alt","PostContent","htmlAst","showSubscribe","Subscribe","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}